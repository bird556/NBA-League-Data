    <>
      <div className="blackBackground"></div>
      <Image
        src="/1.jpg"
        alt="Ja Morant"
        className="backgroundimg"
        fallbackSrc="/1 copy.jpg"
      />
      {/* <Image
        // src="/1.jpg"
        alt="Ja Morant"
        className="backgroundimgNav"
        fallbackSrc="/1 copy.jpg"
      /> */}

      <div className={styles.container}>
        <div className="stats-home">
          <Center>
            {/* <h1>Stats</h1> */}
            <div>
              {topScorers
                .filter((item, index) => index < 25)
                .map((data, index) => {
                  if (data.player.name === 'Luka Dončić') {
                    data.player.name = `Luka Doncic`;
                    // return `Luka Doncic`;
                  } else if (data.player.name === 'Anthony Edwards') {
                    headShotImage = '1630162';
                    teamName = 'MIN';
                    return (
                      <Avatar
                        // size="3xl"
                        pointerEvents="none"
                        size="2xl"
                        name={data.player.name}
                        bgColor="white"
                        src={`https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/${headShotImage}.png`}
                      />
                    );
                  }
                  return (
                    <Flex
                      key={data.player.id}
                      alignItems="center"
                      // p="5"
                      gap="30px"
                      backgroundColor="rgba(34, 34, 34, 0.768)"
                      margin="2rem"
                      cursor="pointer"
                      // h="100px"
                      className="stats-flex"
                      borderRadius="2rem"
                      wrap="wrap"
                      data-aos="fade-up"
                      data-aos-mirror="true"
                      onClick={() => {
                        console.log(
                          `${data.player.name} is averaging ${(
                            data.statistics.points / data.statistics.appearances
                          ).toFixed(1)} points per game for the ${
                            data.team.name
                          }. ${data.player.shortName} is currently ranked #${
                            index + 1
                          } for points per game ✨.`
                        );
                      }}
                      // data-aos-offset="250"
                    >
                      <VStack>
                        <h1>{index + 1}</h1>
                        <h3>Place</h3>
                      </VStack>
                      <Avatar
                        // size="3xl"
                        pointerEvents="none"
                        size="2xl"
                        name={data.player.name}
                        bgColor="white"
                        src={`https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/${headShotImage(
                          `${data.player.name}`
                        )}.png`}
                      />{' '}
                      {/* Player Name, Team, Position */}
                      <VStack align="stretch">
                        <Text fontSize="3xl">
                          {data.player.name.toUpperCase()}
                        </Text>
                        <HStack
                          height="30px"
                          gap="2rem"
                          align="stretch"
                          width="30rem"
                          alignItems="center"
                        >
                          <Text fontSize="2xl" w="15rem">
                            {data.team.name}
                          </Text>
                          <Image
                            // size="3xl"
                            boxSize="30px"
                            alt={data.team.name}
                            src={`https://www.nba.com/stats/media/img/teams/logos/${teamName(
                              `${data.team.name}`
                            )}_logo.svg`}
                          />
                          <Divider orientation="vertical" />
                          <Text fontSize="2xl">{data.player.position}</Text>
                        </HStack>
                      </VStack>
                      <Divider orientation="vertical" height="150px" />
                      <VStack justifyContent="center">
                        <Text fontSize="5xl" as="b">
                          {(
                            data.statistics.points / data.statistics.appearances
                          ).toFixed(1)}
                        </Text>
                        <Center>
                          <Text fontSize="3xl">Points Per Game</Text>
                        </Center>
                      </VStack>
                    </Flex>
                  );
                })}
            </div>
          </Center>
        </div>
      </div>
    </>









    updated..

              <div className={styles.container}>
            <div className="stats-home">
              <Center>
                {/* <h1>Stats</h1> */}
                <div>
                  {topPlayers.points
                    .filter((item, index) => index < 25)
                    .map((data, index) => {
                      if (data.player.name === 'Luka Dončić') {
                        data.player.name = `Luka Doncic`;
                        // return `Luka Doncic`;
                      } else if (data.player.name === 'Anthony Edwards') {
                        headShotImage = '1630162';
                        teamName = 'MIN';
                        return (
                          <Avatar
                            // size="3xl"
                            pointerEvents="none"
                            size="2xl"
                            name={data.player.name}
                            bgColor="white"
                            src={`https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/${headShotImage}.png`}
                          />
                        );
                      }
                      return (
                        <Flex
                          key={data.player.id}
                          alignItems="center"
                          // p="5"
                          gap="30px"
                          backgroundColor="rgba(34, 34, 34, 0.768)"
                          margin="2rem"
                          cursor="pointer"
                          // h="100px"
                          className="stats-flex"
                          borderRadius="2rem"
                          wrap="wrap"
                          // data-aos="fade-up"
                          // data-aos-mirror="true"
                          onClick={() => {
                            console.log(
                              `${data.player.name} is averaging ${(
                                data.statistics.points /
                                data.statistics.appearances
                              ).toFixed(1)} points per game for the ${
                                data.team.name
                              }. ${
                                data.player.shortName
                              } is currently ranked #${
                                index + 1
                              } for points per game ✨.`
                            );
                          }}
                          // data-aos-offset="250"
                        >
                          <VStack>
                            <h1>{index + 1}</h1>
                            <h3>Place</h3>
                          </VStack>
                          <Avatar
                            // size="3xl"
                            pointerEvents="none"
                            size="2xl"
                            name={data.player.name}
                            bgColor="white"
                            src={`https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/${headShotImage(
                              `${data.player.name}`
                            )}.png`}
                          />{' '}
                          {/* Player Name, Team, Position */}
                          <VStack align="stretch">
                            <Text fontSize="3xl">
                              {data.player.name.toUpperCase()}
                            </Text>
                            <HStack
                              height="30px"
                              gap="2rem"
                              align="stretch"
                              width="30rem"
                              alignItems="center"
                            >
                              <Text fontSize="2xl" w="15rem">
                                {data.team.name}
                              </Text>
                              <Image
                                // size="3xl"
                                boxSize="30px"
                                alt={data.team.name}
                                src={`https://www.nba.com/stats/media/img/teams/logos/${teamName(
                                  `${data.team.name}`
                                )}_logo.svg`}
                              />
                              <Divider orientation="vertical" />
                              <Text fontSize="2xl">{data.player.position}</Text>
                            </HStack>
                          </VStack>
                          <Divider orientation="vertical" height="150px" />
                          <VStack justifyContent="center">
                            <Text fontSize="5xl" as="b">
                              {(
                                data.statistics.points /
                                data.statistics.appearances
                              ).toFixed(1)}
                            </Text>
                            <Center>
                              <Text fontSize="3xl">Points Per Game</Text>
                            </Center>
                          </VStack>
                        </Flex>
                      );
                    })}
                </div>
              </Center>
            </div>
          </div>











          {/* Rankings Box */}
          {/* Ranking # */}
          {topPlayers.points
            .filter((item, index) => index < 3)
            .map((data, index) => {
              return (
                <Link
                  key={data.player.id}
                  href={`/player/${data.player.slug}/${data.player.id}`}
                  passHref
                >
                  <Flex
                    cursor="pointer"
                    alignItems="center"
                    justifyContent="space-between"
                  >
                    <HStack gap="1rem">
                      <Text fontSize="2xl" w="1.5rem" textAlign="center">
                        {index + 1}
                      </Text>
                      {/* Avatar Image */}
                      <Avatar
                        pointerEvents="none"
                        size="lg"
                        name={data.player.name}
                        src={`https://api.sofascore.app/api/v1/player/${data.player.id}/image`}
                      />
                      <Text fontSize="2xl">{data.player.name}</Text>
                      <Text fontSize="lg">
                        {`${teamName(`${data.team.name}`)}`
                          .slice(0, 3)
                          .toUpperCase()}
                      </Text>
                    </HStack>
                    <Text fontSize="2xl" className="stat-number">
                      {(
                        data.statistics.points / data.statistics.appearances
                      ).toFixed(1)}
                    </Text>
                  </Flex>
                </Link>
                //End of Ranking Box
              );
            })}







                <SplideSlide>
                  {/* PPG Leaders */}
                  <Box
                    w="3xl"
                    overflow="hidden"
                    p="2rem"
                    className="box-container"
                  >
                    {/* <ImageWithFallback
                      className="backgroundimg-box"
                      priority
                      layout="fill"
                      alt={``}
                      src={`https://i.pinimg.com/564x/f9/4a/a8/f94aa8165977ac33b9c3f7f7eeba9b56.jpg`}
                      fallbackSrc={'/team-background/defaultimage.jpg'}
                    /> */}
                    <div className="blur"></div>
                    <Flex flexDirection="column" gap="2rem" zIndex="100">
                      {/* Title Box */}
                      <Flex alignItems="center" justifyContent="space-between">
                        <HStack gap="0.5rem">
                          <FaBasketballBall fontSize="16px" />
                          <Text fontSize="3xl">Points Per Game </Text>
                        </HStack>
                        <Text fontSize="2xl">More</Text>
                      </Flex>

                      <Box>
                        {/* PPG Text */}
                        <Text float="right" fontSize="lg">
                          PPG
                        </Text>
                      </Box>
                      {/* Rankings Box */}
                      {/* Ranking # */}
                      {topPlayers.points
                        .filter((item, index) => index < 3)
                        .map((data, index) => {
                          return (
                            <Link
                              key={data.player.id}
                              href={`/player/${data.player.slug}/${data.player.id}`}
                              passHref
                            >
                              <Flex
                                cursor="pointer"
                                alignItems="center"
                                justifyContent="space-between"
                              >
                                <HStack gap="1rem">
                                  <Text
                                    fontSize="2xl"
                                    w="1.5rem"
                                    textAlign="center"
                                  >
                                    {index + 1}
                                  </Text>
                                  {/* Avatar Image */}
                                  <Avatar
                                    pointerEvents="none"
                                    size="lg"
                                    name={data.player.name}
                                    src={`https://api.sofascore.app/api/v1/player/${data.player.id}/image`}
                                  />
                                  <Text fontSize="2xl">{data.player.name}</Text>
                                  <Text fontSize="lg">
                                    {`${teamName(`${data.team.name}`)}`
                                      .slice(0, 3)
                                      .toUpperCase()}
                                  </Text>
                                </HStack>
                                <Text fontSize="2xl" className="stat-number">
                                  {(
                                    data.statistics.points /
                                    data.statistics.appearances
                                  ).toFixed(1)}
                                </Text>
                              </Flex>
                            </Link>
                            //End of Ranking Box
                          );
                        })}
                    </Flex>
                  </Box>
                </SplideSlide>

                          <SplideSlide>
                  {/* Assist Leaders */}
                  <Box
                    w="3xl"
                    overflow="hidden"
                    className="box-container"
                    p="2rem"
                  >
                    {/* <ImageWithFallback
                      priority
                      layout="fill"
                      alt={``}
                      src={`https://a4.espncdn.com/combiner/i?img=%2Fphoto%2F2021%2F0721%2Fr882937_1296x729_16%2D9.jpg`}
                      fallbackSrc={'/team-background/defaultimage.jpg'}
                      className="backgroundimg-box"
                    /> */}
                    <div className="blur"></div>

                    <Flex flexDirection="column" gap="2rem">
                      {/* Title Box */}
                      <Flex alignItems="center" justifyContent="space-between">
                        <HStack gap="0.5rem">
                          <FaBasketballBall fontSize="16px" />
                          <Text fontSize="3xl">Assists Per Game</Text>
                        </HStack>
                        <Text fontSize="2xl">More</Text>
                      </Flex>
                      <Box>
                        {/* AST Text */}
                        <Text float="right" fontSize="lg">
                          AST
                        </Text>
                      </Box>
                      {/* Rankings Box */}
                      {/* Ranking # */}

                      {topPlayers.assists
                        .filter((item, index) => index < 3)
                        .map(
                          (data, index) => (
                            <Link
                              key={data.player.id}
                              href={`/player/${data.player.slug}/${data.player.id}`}
                              passHref
                            >
                              <Flex
                                data-aos="fade-left"
                                data-aos-delay="50"
                                alignItems="center"
                                justifyContent="space-between"
                                key={data.player.id}
                                cursor="pointer"
                              >
                                <HStack gap="1rem">
                                  <Text
                                    fontSize="2xl"
                                    w="1.5rem"
                                    textAlign="center"
                                  >
                                    {index + 1}
                                  </Text>
                                  {/* Avatar Image */}
                                  <Avatar
                                    pointerEvents="none"
                                    size="lg"
                                    name={data.player.name}
                                    src={`https://api.sofascore.app/api/v1/player/${data.player.id}/image`}
                                  />
                                  <Text fontSize="2xl">{data.player.name}</Text>
                                  <Text fontSize="lg">
                                    {`${teamName(`${data.team.name}`)}`
                                      .slice(0, 3)
                                      .toUpperCase()}
                                  </Text>
                                </HStack>
                                <Text fontSize="2xl">
                                  {(
                                    data.statistics.assists /
                                    data.statistics.appearances
                                  ).toFixed(1)}
                                </Text>
                              </Flex>
                            </Link>
                          )

                          //End of Ranking Box
                        )}
                    </Flex>
                  </Box>
                </SplideSlide>
                <SplideSlide>
                  {/* Rebound Leaders */}
                  <Box
                    w="3xl"
                    className="box-container"
                    overflow="hidden"
                    p="2rem"
                  >
                    <div className="blur"></div>

                    <Flex flexDirection="column" gap="2rem">
                      {/* Title Box */}
                      <Flex alignItems="center" justifyContent="space-between">
                        <HStack gap="0.5rem">
                          <FaBasketballBall fontSize="16px" />
                          <Text fontSize="3xl">Rebounds Per Game</Text>
                        </HStack>
                        <Text fontSize="2xl">More</Text>
                      </Flex>
                      <Box>
                        {/* REB Text */}
                        <Text float="right" fontSize="lg">
                          REB
                        </Text>
                      </Box>
                      {/* Rankings Box */}
                      {/* Ranking # */}
                      {topPlayers.rebounds
                        .filter((item, index) => index < 3)
                        .map((data, index) => {
                          return (
                            <Link
                              key={data.player.id}
                              href={`/player/${data.player.slug}/${data.player.id}`}
                              passHref
                            >
                              <Flex
                                alignItems="center"
                                justifyContent="space-between"
                                cursor="pointer"
                              >
                                <HStack gap="1rem">
                                  <Text
                                    fontSize="2xl"
                                    w="1.5rem"
                                    textAlign="center"
                                  >
                                    {index + 1}
                                  </Text>
                                  {/* Avatar Image */}
                                  <Avatar
                                    pointerEvents="none"
                                    size="lg"
                                    name={data.player.name}
                                    src={`https://api.sofascore.app/api/v1/player/${data.player.id}/image`}
                                  />
                                  <Text fontSize="2xl">{data.player.name}</Text>
                                  <Text fontSize="lg">
                                    {`${teamName(`${data.team.name}`)}`
                                      .slice(0, 3)
                                      .toUpperCase()}
                                  </Text>
                                </HStack>
                                <Text fontSize="2xl">
                                  {(
                                    data.statistics.rebounds /
                                    data.statistics.appearances
                                  ).toFixed(1)}
                                </Text>
                              </Flex>
                            </Link>
                            //End of Ranking Box
                          );
                        })}
                    </Flex>
                  </Box>
                </SplideSlide>
                <SplideSlide>
                  {/* Steals Leaders */}
                  <Box
                    w="3xl"
                    className="box-container"
                    overflow="hidden"
                    p="2rem"
                  >
                    {/* <ImageWithFallback
                      priority
                      layout="fill"
                      alt={``}
                      src={'/player-background/murray-dejounte.jpg'}
                      fallbackSrc={'/team-background/defaultimage.jpg'}
                      className="backgroundimg-box"
                    /> */}
                    <div className="blur"></div>

                    <Flex flexDirection="column" gap="2rem">
                      {/* Title Box */}
                      <Flex alignItems="center" justifyContent="space-between">
                        <HStack gap="0.5rem">
                          <FaBasketballBall fontSize="16px" />
                          <Text fontSize="3xl">Steals Per Game</Text>
                        </HStack>
                        <Text fontSize="2xl">More</Text>
                      </Flex>
                      <Box>
                        {/* STL Text */}
                        <Text float="right" fontSize="lg">
                          STL
                        </Text>
                      </Box>
                      {/* Rankings Box */}
                      {/* Ranking # */}
                      {topPlayers.steals
                        .filter((item, index) => index < 3)
                        .map((data, index) => {
                          return (
                            <Link
                              key={data.player.id}
                              href={`/player/${data.player.slug}/${data.player.id}`}
                              passHref
                            >
                              <Flex
                                alignItems="center"
                                justifyContent="space-between"
                                cursor="pointer"
                              >
                                <HStack gap="1rem">
                                  <Text
                                    fontSize="2xl"
                                    w="1.5rem"
                                    textAlign="center"
                                  >
                                    {index + 1}
                                  </Text>
                                  {/* Avatar Image */}
                                  <Avatar
                                    pointerEvents="none"
                                    size="lg"
                                    name={data.player.name}
                                    src={`https://api.sofascore.app/api/v1/player/${data.player.id}/image`}
                                  />
                                  <Text fontSize="2xl">{data.player.name}</Text>
                                  <Text fontSize="lg">
                                    {`${teamName(`${data.team.name}`)}`
                                      .slice(0, 3)
                                      .toUpperCase()}
                                  </Text>
                                </HStack>
                                <Text fontSize="2xl">
                                  {(
                                    data.statistics.steals /
                                    data.statistics.appearances
                                  ).toFixed(1)}
                                </Text>
                              </Flex>
                            </Link>
                            //End of Ranking Box
                          );
                        })}
                    </Flex>
                  </Box>
                </SplideSlide>
                <SplideSlide>
                  {/* Blocks Leaders */}

                  <Box
                    w="3xl"
                    className="box-container"
                    overflow="hidden"
                    p="2rem"
                  >
                    <div className="blur"></div>

                    <Flex flexDirection="column" gap="2rem">
                      {/* Title Box */}
                      <Flex alignItems="center" justifyContent="space-between">
                        <HStack gap="0.5rem">
                          <FaBasketballBall fontSize="16px" />
                          <Text fontSize="3xl">Blocks Per Game</Text>
                        </HStack>
                        <Text fontSize="2xl">More</Text>
                      </Flex>
                      <Box>
                        {/* BPG Text */}
                        <Text float="right" fontSize="lg">
                          BPG
                        </Text>
                      </Box>
                      {/* Rankings Box */}
                      {/* Ranking # */}
                      {topPlayers.blocks
                        .filter((item, index) => index < 3)
                        .map((data, index) => {
                          return (
                            <Link
                              key={data.player.id}
                              href={`/player/${data.player.slug}/${data.player.id}`}
                              passHref
                            >
                              <Flex
                                cursor="pointer"
                                alignItems="center"
                                justifyContent="space-between"
                              >
                                <HStack gap="1rem">
                                  <Text
                                    fontSize="2xl"
                                    w="1.5rem"
                                    textAlign="center"
                                  >
                                    {index + 1}
                                  </Text>
                                  {/* Avatar Image */}
                                  <Avatar
                                    pointerEvents="none"
                                    size="lg"
                                    name={data.player.name}
                                    src={`https://api.sofascore.app/api/v1/player/${data.player.id}/image`}
                                  />
                                  <Text fontSize="2xl">{data.player.name}</Text>
                                  <Text fontSize="lg">
                                    {`${teamName(`${data.team.name}`)}`
                                      .slice(0, 3)
                                      .toUpperCase()}
                                  </Text>
                                </HStack>
                                <Text fontSize="2xl">
                                  {(
                                    data.statistics.blocks /
                                    data.statistics.appearances
                                  ).toFixed(1)}
                                </Text>
                              </Flex>
                            </Link>
                            //End of Ranking Box
                          );
                        })}
                    </Flex>
                  </Box>
                </SplideSlide>
                <SplideSlide>
                  {/* Triple Double Leaders */}
                  <Box
                    w="3xl"
                    className="box-container"
                    overflow="hidden"
                    p="2rem"
                  >
                    <div className="blur"></div>

                    <Flex flexDirection="column" gap="2rem">
                      {/* Title Box */}
                      <Flex alignItems="center" justifyContent="space-between">
                        <HStack gap="0.5rem">
                          <FaBasketballBall fontSize="16px" />
                          <Text fontSize="3xl">Triple Double Leaders</Text>
                        </HStack>
                        <Text fontSize="2xl">More</Text>
                      </Flex>
                      <Box>
                        {/* Triple Doubles Small Text */}
                        <Text float="right" fontSize="lg">
                          Triple Doubles
                        </Text>
                      </Box>
                      {/* Rankings Box */}
                      {/* Ranking # */}
                      {topPlayers.tripleDoubles
                        .filter((item, index) => index < 3)
                        .map((data, index) => {
                          return (
                            <Link
                              key={data.player.id}
                              href={`/player/${data.player.slug}/${data.player.id}`}
                              passHref
                            >
                              <Flex
                                cursor="pointer"
                                alignItems="center"
                                justifyContent="space-between"
                              >
                                <HStack gap="1rem">
                                  <Text
                                    fontSize="2xl"
                                    w="1.5rem"
                                    textAlign="center"
                                  >
                                    {index + 1}
                                  </Text>
                                  {/* Avatar Image */}
                                  <Avatar
                                    pointerEvents="none"
                                    size="lg"
                                    name={data.player.name}
                                    src={`https://api.sofascore.app/api/v1/player/${data.player.id}/image`}
                                  />
                                  <Text fontSize="2xl">{data.player.name}</Text>
                                  <Text fontSize="lg">
                                    {`${teamName(`${data.team.name}`)}`
                                      .slice(0, 3)
                                      .toUpperCase()}
                                  </Text>
                                </HStack>
                                <Text fontSize="2xl">
                                  {data.statistics.tripleDoubles}
                                </Text>
                              </Flex>
                            </Link>
                            //End of Ranking Box
                          );
                        })}
                    </Flex>
                  </Box>
                </SplideSlide>
                <SplideSlide>
                  {/* 3 Pointers Made Leaders */}
                  <Box
                    w="3xl"
                    className="box-container"
                    overflow="hidden"
                    p="2rem"
                  >
                    <div className="blur"></div>

                    <Flex flexDirection="column" gap="2rem">
                      {/* Title Box */}
                      <Flex alignItems="center" justifyContent="space-between">
                        <HStack gap="0.5rem">
                          <FaBasketballBall fontSize="16px" />
                          <Text fontSize="3xl">3 Pointers Made Leaders</Text>
                        </HStack>
                        <Text fontSize="2xl">More</Text>
                      </Flex>
                      <Box>
                        {/* 3 Pointers Made Text */}
                        <Text float="right" fontSize="lg">
                          3Pts Made
                        </Text>
                      </Box>
                      {/* Rankings Box */}
                      {/* Ranking # */}
                      {topPlayers.threePointsMade
                        .filter((item, index) => index < 3)
                        .map((data, index) => {
                          return (
                            <Link
                              key={data.player.id}
                              href={`/player/${data.player.slug}/${data.player.id}`}
                              passHref
                            >
                              <Flex
                                cursor="pointer"
                                alignItems="center"
                                justifyContent="space-between"
                              >
                                <HStack gap="1rem">
                                  <Text
                                    fontSize="2xl"
                                    w="1.5rem"
                                    textAlign="center"
                                  >
                                    {index + 1}
                                  </Text>
                                  {/* Avatar Image */}
                                  <Avatar
                                    pointerEvents="none"
                                    size="lg"
                                    name={data.player.name}
                                    src={`https://api.sofascore.app/api/v1/player/${data.player.id}/image`}
                                  />
                                  <Text fontSize="2xl">{data.player.name}</Text>
                                  <Text fontSize="lg">
                                    {`${teamName(`${data.team.name}`)}`
                                      .slice(0, 3)
                                      .toUpperCase()}
                                  </Text>
                                </HStack>
                                <Text fontSize="2xl">
                                  {data.statistics.threePointsMade}
                                </Text>
                              </Flex>
                            </Link>
                            //End of Ranking Box
                          );
                        })}
                    </Flex>
                  </Box>
                </SplideSlide>
                <SplideSlide>
                  {/* 3 Pointers Percentage Leaders */}
                  <Box
                    w="3xl"
                    className="box-container"
                    overflow="hidden"
                    p="2rem"
                  >
                    <div className="blur"></div>

                    <Flex flexDirection="column" gap="2rem">
                      {/* Title Box */}
                      <Flex alignItems="center" justifyContent="space-between">
                        <HStack gap="0.5rem">
                          <FaBasketballBall fontSize="16px" />
                          <Text fontSize="3xl">
                            3 Pointer Percentage Leaders
                          </Text>
                        </HStack>
                        <Text fontSize="2xl">More</Text>
                      </Flex>
                      <Box>
                        {/* 3 Pointers Percentage Text */}
                        <Text float="right" fontSize="lg">
                          3Pt %
                        </Text>
                      </Box>
                      {/* Rankings Box */}
                      {/* Ranking # */}
                      {topPlayers.threePointsPercentage
                        .filter((item, index) => index < 3)
                        .map((data, index) => {
                          return (
                            <Link
                              key={data.player.id}
                              href={`/player/${data.player.slug}/${data.player.id}`}
                              passHref
                            >
                              <Flex
                                cursor="pointer"
                                alignItems="center"
                                justifyContent="space-between"
                              >
                                <HStack gap="1rem">
                                  <Text
                                    fontSize="2xl"
                                    w="1.5rem"
                                    textAlign="center"
                                  >
                                    {index + 1}
                                  </Text>
                                  {/* Avatar Image */}
                                  <Avatar
                                    pointerEvents="none"
                                    size="lg"
                                    name={data.player.name}
                                    src={`https://api.sofascore.app/api/v1/player/${data.player.id}/image`}
                                  />
                                  <Text
                                    fontSize="2xl"
                                    // w="20rem"
                                  >
                                    {data.player.name}
                                  </Text>
                                  <Text fontSize="lg">
                                    {`${teamName(`${data.team.name}`)}`
                                      .slice(0, 3)
                                      .toUpperCase()}
                                  </Text>
                                </HStack>
                                <Text fontSize="2xl">
                                  {`${data.statistics.threePointsPercentage.toFixed(
                                    1
                                  )}%`}
                                </Text>
                              </Flex>
                            </Link>
                            //End of Ranking Box
                          );
                        })}
                    </Flex>
                  </Box>
                </SplideSlide>
                <SplideSlide>
                  {/* Field Goal Percentage Leaders */}
                  <Box
                    w="3xl"
                    className="box-container"
                    overflow="hidden"
                    p="2rem"
                  >
                    <div className="blur"></div>

                    <Flex flexDirection="column" gap="2rem">
                      {/* Title Box */}
                      <Flex alignItems="center" justifyContent="space-between">
                        <HStack gap="0.5rem">
                          <FaBasketballBall fontSize="16px" />
                          <Text fontSize="3xl">
                            Field Goal Percentage Leaders
                          </Text>
                        </HStack>
                        <Text fontSize="2xl">More</Text>
                      </Flex>
                      <Box>
                        {/* 3 Pointers Percentage Text */}
                        <Text float="right" fontSize="lg">
                          FG %
                        </Text>
                      </Box>
                      {/* Rankings Box */}
                      {/* Ranking # */}
                      {topPlayers.fieldGoalsPercentage
                        .filter((item, index) => index < 3)
                        .map((data, index) => {
                          return (
                            <Link
                              key={data.player.id}
                              href={`/player/${data.player.slug}/${data.player.id}`}
                              passHref
                            >
                              <Flex
                                cursor="pointer"
                                alignItems="center"
                                justifyContent="space-between"
                              >
                                <HStack gap="1rem">
                                  <Text
                                    fontSize="2xl"
                                    w="1.5rem"
                                    textAlign="center"
                                  >
                                    {index + 1}
                                  </Text>
                                  {/* Avatar Image */}
                                  <Avatar
                                    pointerEvents="none"
                                    size="lg"
                                    name={data.player.name}
                                    src={`https://api.sofascore.app/api/v1/player/${data.player.id}/image`}
                                  />
                                  <Text
                                    fontSize="2xl"
                                    // w="20rem"
                                  >
                                    {data.player.name}
                                  </Text>
                                  <Text fontSize="lg">
                                    {`${teamName(`${data.team.name}`)}`
                                      .slice(0, 3)
                                      .toUpperCase()}
                                  </Text>
                                </HStack>
                                <Text fontSize="2xl">
                                  {`${data.statistics.fieldGoalsPercentage.toFixed(
                                    1
                                  )}%`}
                                </Text>
                              </Flex>
                            </Link>
                            //End of Ranking Box
                          );
                        })}
                    </Flex>
                  </Box>
                </SplideSlide>
                <SplideSlide>
                  {/* Free Throw Percentage Leaders */}
                  <Box
                    w="3xl"
                    className="box-container"
                    overflow="hidden"
                    p="2rem"
                  >
                    <div className="blur"></div>

                    <Flex flexDirection="column" gap="2rem">
                      {/* Title Box */}
                      <Flex alignItems="center" justifyContent="space-between">
                        <HStack gap="0.5rem">
                          <FaBasketballBall fontSize="16px" />
                          <Text fontSize="3xl">
                            Free Throw Percentage Leaders
                          </Text>
                        </HStack>
                        <Text fontSize="2xl">More</Text>
                      </Flex>
                      <Box>
                        {/* Free Throw Percentage Text */}
                        <Text float="right" fontSize="lg">
                          FT %
                        </Text>
                      </Box>
                      {/* Rankings Box */}
                      {/* Ranking # */}
                      {topPlayers.freeThrowsPercentage
                        .filter((item, index) => index < 3)
                        .map((data, index) => {
                          return (
                            <Link
                              key={data.player.id}
                              href={`/player/${data.player.slug}/${data.player.id}`}
                              passHref
                            >
                              <Flex
                                cursor="pointer"
                                alignItems="center"
                                justifyContent="space-between"
                              >
                                <HStack gap="1rem">
                                  <Text
                                    fontSize="2xl"
                                    w="1.5rem"
                                    textAlign="center"
                                  >
                                    {index + 1}
                                  </Text>
                                  {/* Avatar Image */}
                                  <Avatar
                                    pointerEvents="none"
                                    size="lg"
                                    name={data.player.name}
                                    src={`https://api.sofascore.app/api/v1/player/${data.player.id}/image`}
                                  />
                                  <Text fontSize="2xl">{data.player.name}</Text>
                                  <Text fontSize="lg">
                                    {`${teamName(`${data.team.name}`)}`
                                      .slice(0, 3)
                                      .toUpperCase()}
                                  </Text>
                                </HStack>
                                <Text fontSize="2xl">
                                  {`${data.statistics.freeThrowsPercentage.toFixed(
                                    1
                                  )}%`}
                                </Text>
                              </Flex>
                            </Link>
                            //End of Ranking Box
                          );
                        })}
                    </Flex>
                  </Box>
                </SplideSlide>














                        <div className="player-team-details">
          <Box p="8rem" data-aos="fade-right">
            <Flex flexWrap="wrap" flexDirection="column">
              <Flex flexDirection="column" marginBottom="3.6rem">
                <Flex alignItems="center" gap="2.4rem">
                  <h2 data-aos="fade-right" data-aos-delay="400">
                    {first}
                  </h2>
                  <Image
                    boxSize="8rem"
                    src={`https://api.sofascore.app/api/v1/player/${playerDetails.player.id}/image`}
                    alt={playerDetails.player.name}
                    borderRadius="100%"
                    fallbackSrc={
                      'https://i.pinimg.com/736x/3f/6c/0b/3f6c0b67b844e82d8dd1e7a6d85a2b53.jpg'
                    }
                  />
                </Flex>
                <Flex
                  alignItems="center"
                  gap="2.4rem"
                  w="100%"
                  maxWidth="115rem"
                  flexWrap="wrap"
                >
                  <Box marginRight="6.4rem">
                    <h1 data-aos="fade-up" data-aos-delay="600">
                      {last.toUpperCase()}
                    </h1>
                    {nameDivider()}
                  </Box>
                  {/* Team, Jersey Number, Position & Follow Button+ */}
                  <Flex
                    alignItems="center"
                    gap="2.4rem"
                    flexWrap="wrap"
                    data-aos="fade-down"
                    data-aos-delay="500"
                  >
                    <Link
                      key={playerDetails.player.team.id}
                      href={`/teams/${playerDetails.player.team.slug}/${playerDetails.player.team.id}`}
                      passHref
                    >
                      <Image
                        cursor="pointer"
                        boxSize="10rem"
                        alt={playerDetails.player.name}
                        src={`https://api.sofascore.app/api/v1/team/${playerDetails.player.team.id}/image`}
                        fallbackSrc={
                          'https://i.pinimg.com/736x/3f/6c/0b/3f6c0b67b844e82d8dd1e7a6d85a2b53.jpg'
                        }
                      />
                    </Link>
                    {playerNumber()}
                    <Button />
                  </Flex>
                </Flex>
              </Flex>
              {height()}
              <Box maxWidth="36rem" marginBottom="3.6rem">
                <Divider />
              </Box>
              {/* Born, Country, Team, Draft Team & Year */}
              <Box bgColor="">
                <Flex flexDirection="column" gap="2.4rem">
                  {/* Born */}
                  {age()}

                  {/* Born */}

                  {/* Country */}
                  {country()}

                  {/* Draft */}
                  {draftYearReal()}
                </Flex>
              </Box>
            </Flex>
          </Box>
          {/* </Center> */}

          <div
            className="season-careers-stats"
            data-aos="fade-down"
            data-aos-delay="200"
            data-aos-offset="-100"
          >
            <div className="blur"></div>
            <Flex flexDirection="column">
              <Flex
                alignItems="center"
                justifyContent="space-between"
                p="0.8rem 8rem"
              >
                <h4>
                  {playerStats
                    ? playerStats.statistics.type.slice(7)
                    : 'Season'}
                </h4>
                <div
                  data-aos="fade-right"
                  data-aos-delay="600"
                  data-aos-offset="-700"
                >
                  <Flex gap="4.4rem">
                    {/* Points Per Game */}
                    <Box w="5rem">
                      <Flex
                        flexDirection="column"
                        justifyContent="center"
                        alignItems="center"
                      >
                        <p>PPG</p>
                        <h4>
                          {playerStats
                            ? (
                                playerStats.statistics.points /
                                playerStats.statistics.appearances
                              ).toFixed(1)
                            : 0}
                        </h4>
                      </Flex>
                    </Box>

                    {/* Rebounds Per Game */}
                    <Box w="5rem">
                      <Flex
                        flexDirection="column"
                        justifyContent="center"
                        alignItems="center"
                      >
                        <p>RPG</p>
                        <h4>
                          {playerStats
                            ? (
                                playerStats.statistics.rebounds /
                                playerStats.statistics.appearances
                              ).toFixed(1)
                            : 0}
                        </h4>
                      </Flex>
                    </Box>

                    {/* Assists Per Game */}
                    <Box w="5rem">
                      <Flex
                        flexDirection="column"
                        justifyContent="center"
                        alignItems="center"
                      >
                        <p>AST</p>
                        <h4>
                          {playerStats
                            ? (
                                playerStats.statistics.assists /
                                playerStats.statistics.appearances
                              ).toFixed(1)
                            : 0}
                        </h4>
                      </Flex>
                    </Box>

                    {/* Blocks Per Game */}
                    <Box w="5rem">
                      <Flex
                        flexDirection="column"
                        justifyContent="center"
                        alignItems="center"
                      >
                        <p>BLK</p>
                        <h4>
                          {playerStats
                            ? (
                                playerStats.statistics.blocks /
                                playerStats.statistics.appearances
                              ).toFixed(1)
                            : 0}
                        </h4>
                      </Flex>
                    </Box>

                    {/* Steals Per Game */}
                    <Box w="5rem">
                      <Flex
                        flexDirection="column"
                        justifyContent="center"
                        alignItems="center"
                      >
                        <p>STL</p>
                        <h4>
                          {playerStats
                            ? (
                                playerStats.statistics.steals /
                                playerStats.statistics.appearances
                              ).toFixed(1)
                            : 0}
                        </h4>
                      </Flex>
                    </Box>

                    {/* FG % */}
                    <Box w="5rem">
                      <Flex
                        flexDirection="column"
                        justifyContent="center"
                        alignItems="center"
                      >
                        <p>FG%</p>
                        <h4>
                          {playerStats
                            ? playerStats.statistics.fieldGoalsPercentage.toFixed(
                                1
                              )
                            : 0}
                        </h4>
                      </Flex>
                    </Box>

                    {/* 3P% */}
                    <Box w="5rem">
                      <Flex
                        flexDirection="column"
                        justifyContent="center"
                        alignItems="center"
                      >
                        <p>3P%</p>
                        <h4>
                          {playerStats
                            ? playerStats.statistics.threePointsPercentage.toFixed(
                                1
                              )
                            : 0}
                        </h4>
                      </Flex>
                    </Box>

                    {/* FT% */}
                    <Box w="5rem">
                      <Flex
                        flexDirection="column"
                        justifyContent="center"
                        alignItems="center"
                      >
                        <p>FT%</p>
                        <h4>
                          {playerStats
                            ? playerStats.statistics.freeThrowsPercentage.toFixed(
                                1
                              )
                            : 0}
                        </h4>
                      </Flex>
                    </Box>
                  </Flex>
                </div>
              </Flex>
              {playoffs()}
            </Flex>
          </div>
        </div>










        (
            <Box
              zIndex="500"
              backgroundColor="rgba(34, 34, 34, 0.868)"
              position="absolute"
              top="8rem"
              right="2.6rem"
              p="1.6rem 2.6rem 1.6rem"
              borderRadius="1rem"
              w="30rem"
            >
              <Flex flexDirection="column" gap="2rem">
                {info
                  ? info
                      .filter((item, index) => index < 10)
                      .map((info) => {
                        const data = info.entity;
                        if (
                          info.type === 'player' &&
                          nbaTeamsFull.includes(data.team.name)
                        ) {
                          return (
                            <>
                              <Link
                                key={data.id}
                                href={`/player/${data.slug}/${data.id}`}
                                passHref
                              >
                                <Box cursor="pointer" onClick={clear}>
                                  <Flex gap="1.8rem" alignItems="center">
                                    <Image
                                      boxSize="5rem"
                                      src={`https://api.sofascore.app/api/v1/player/${data.id}/image`}
                                      alt={data.name}
                                      borderRadius="100%"
                                      fallbackSrc={
                                        'https://i.pinimg.com/736x/3f/6c/0b/3f6c0b67b844e82d8dd1e7a6d85a2b53.jpg'
                                      }
                                    />
                                    <Box>
                                      <Text fontSize="2xl">{data.name}</Text>
                                      <Flex gap="0.8rem" alignItems="center">
                                        <Image
                                          boxSize="3rem"
                                          src={`https://api.sofascore.app/api/v1/team/${data.team.id}/image`}
                                          alt={data.team.name}
                                          fallbackSrc={
                                            'https://i.pinimg.com/736x/3f/6c/0b/3f6c0b67b844e82d8dd1e7a6d85a2b53.jpg'
                                          }
                                        />
                                        <Text fontSize="2xl">
                                          {data.team.name}
                                        </Text>
                                      </Flex>
                                    </Box>
                                  </Flex>
                                  <Box p="1.6rem">
                                    <Divider />
                                  </Box>
                                </Box>
                              </Link>
                            </>
                          );
                        } else if (
                          info.type === 'team' &&
                          nbaTeamsFull.includes(info.entity.name)
                        ) {
                          return (
                            <Link
                              href={`/teams/${data.slug}/${data.id}`}
                              passHref
                            >
                              <Box cursor="pointer" onClick={clear}>
                                <Flex gap="1.8rem" alignItems="center">
                                  <Image
                                    boxSize="5rem"
                                    src={`https://api.sofascore.app/api/v1/team/${data.id}/image`}
                                    alt={data.name}
                                    fallbackSrc={
                                      'https://i.pinimg.com/736x/3f/6c/0b/3f6c0b67b844e82d8dd1e7a6d85a2b53.jpg'
                                    }
                                  />
                                  <Box>
                                    <Text fontSize="2xl">{data.name}</Text>
                                  </Box>
                                </Flex>
                                <Box p="1.6rem">
                                  <Divider />
                                </Box>
                              </Box>
                            </Link>
                          );
                        }
                      })
                  : []}
              </Flex>
            </Box>
          )